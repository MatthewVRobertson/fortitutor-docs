@startuml

package Anatomy {
    class MuscleGroup {
        MuscleGroup
        Name
        BodySegment
    }

    class Muscle {
        Name
        MuscleGroup
    }

    class BodySegment {
        BodySegment
        Name
    }
    
    BodySegment *--> MuscleGroup
    MuscleGroup *--> Muscle
}

package Fitness {
    class Exercise {
        Name
        + MusclesWorked List<ExerciseMuscleWorked>
        Equipment        
        ExerciseExecution
    }

    class ExerciseMuscleWorked {
        Muscle
        MuscleWorkedAmount
    }

    enum MuscleWorkedAmount {
        Primary
        Secondary
    }

    class Equipment {
        Name
        EquipmentType
    }

    enum ExerciseExecution {
        Bilateral,
        Unilateral
    }
    enum EquipmentType {
        Freewreight
        Machine
        Other
    }

    Exercise *--> ExerciseMuscleWorked
    Exercise o--> Equipment
    Exercise --> ExerciseExecution
    ExerciseMuscleWorked --> MuscleWorkedAmount
    Fitness.ExerciseMuscleWorked o------> Anatomy.Muscle
    Equipment --> EquipmentType
}



package Training {
    class TrainingProfile {
        Name
    }

    class MacroPeriodization
    {
        MacroPeriodizationId
        TrainingProfile
        StartDateRelative
        EndDateRelative
    }
    note top of MacroPeriodization
        Overall goal, months, season or year.
    end note

    class MesocyclePeriodization
    {
        MesocyclePeriodizationId
        MacroPeriodizationId
        CycleOrder        
        CycleLengthTimeUnit
        CycleLengthValue
        StartDateRelative
        EndDateRelative
    }
    note top of MesocyclePeriodization
        Focused phases - weeks to months.
        Mesocycles allow changes during a macro cycle,
        this is why there are start and end dates.
    end note

    class MicroCyclePeriodization
    {
        CycleOrder
        IsDeload        
        Sesssions List<SessionPeriodization>
    }
    note top of MicroCyclePeriodization
        The day to day plan
    end note

    class WorkOutSessionPeriodization
    {
        IsRestDay
        Exercises List<Exercise> 
    }

    class TrainingProfileWeightTracker {
        TrainingProfileId
        RecordDateUtc
        WeightInput decimal(19,4)
        IsInputMetric
        NormalizedWeightKg decimal(19,4)
    }

    class TrainingProfileRole {
        TrainingProfileId
        RoleId
        UserId
    }

    class SessionWork {
        TrainingProfile
        Series List<SeriesWorked>
        + SessionStartDateUtc
    }

    class SeriesWorked {
        Exercise
        Sets List<SetWorked>
    }


    class SetType {
        Warmup
        Working
    }

    class SetWorked {
        Reps
        Weight
        SideWorked
    }

    class OneRepMaxTracker {
        TrainingProfileId
        ExerciseId
        RecordDateUtc
        Weight
        Reps
        EstimatedOneRepMax
    }

    enum SideWork {
        Left
        Right
        Bilateral
    }

    TrainingProfile *----> TrainingProfileRole
    TrainingProfile <--o TrainingProfileWeightTracker
    TrainingProfile <--o SessionWork
    TrainingProfile <--o OneRepMaxTracker
    TrainingProfile <--o MacroPeriodization     

    MacroPeriodization *--> MesocyclePeriodization     
    MesocyclePeriodization *--> MicroCyclePeriodization
    MicroCyclePeriodization *--> WorkOutSessionPeriodization
    WorkOutSessionPeriodization o--> Fitness.Exercise
   
    SessionWork *--> SeriesWorked
    SeriesWorked *--> SetWorked
    SetWorked --> SideWork
}

Training.SeriesWorked o--> Fitness.Exercise

package Venue {
    class Facility {
        VenuId
        Name  
        + Address Address      
        + VenueEquipment List<VenueEquipment>
    }

    class FacilityEquipment {
        Venu
        Equipment
        Quantity
    }
    
    Facility *---> FacilityEquipment
}

FacilityEquipment o---> Fitness.Equipment

Facility *-----> Common.Address

package Common {
    class Address {
        StreetNumber
        StreeName
        Unit
        PostalCode
        Country
        State
        City
    }

    class Locale {
        LocaleId
        LocaleCode
    }
}
@enduml